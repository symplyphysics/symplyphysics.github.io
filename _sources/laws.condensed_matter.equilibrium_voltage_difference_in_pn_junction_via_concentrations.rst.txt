Equilibrium voltage difference in p-n junction via concentrations
-----------------------------------------------------------------

The p-n junction has a potential barrier preventing the movement of charge carriers.

**Notation:**

#. :math:`k_\text{B}` (:code:`k_B`) is :attr:`~symplyphysics.quantities.boltzmann_constant`.

**Conditions:**

#. :math:`n_\text{a}` is constant on the p side and zero on the n side.
#. :math:`n_\text{d}` is constant on the n side and zero on the p side.
#. The semiconductor is non-degenerate, i.e. :math:`n_\text{i}` is independent of
   the Fermi energy.

**Links:**

#. `Size of depleting region <https://en.wikipedia.org/wiki/P%E2%80%93n_junction#Size_of_depletion_region>`_.

.. py:currentmodule:: symplyphysics.laws.condensed_matter.equilibrium_voltage_difference_in_pn_junction_via_concentrations

.. py:data:: equilibrium_voltage_difference

    Equilibrium :attr:`~symplyphysics.symbols.electrodynamics.voltage` difference corresponding to the size of the depletion region.

    Symbol:
        :code:`Delta(V)`

    Latex:
        :math:`\Delta V`

    Dimension:
        :code:`voltage`

.. py:data:: donor_concentration

    :attr:`~symplyphysics.symbols.basic.number_density` of positively-charged donor atoms.

    Symbol:
        :code:`n_d`

    Latex:
        :math:`n_\text{d}`

    Dimension:
        :code:`1/volume`

.. py:data:: acceptor_concentration

    :attr:`~symplyphysics.symbols.basic.number_density` of negatively-charged acceptor atoms.

    Symbol:
        :code:`n_a`

    Latex:
        :math:`n_\text{a}`

    Dimension:
        :code:`1/volume`

.. py:data:: charge_carriers_concentration

    :attr:`~symplyphysics.symbols.basic.number_density` of intrinsic charge carriers.

    Symbol:
        :code:`n`

    Latex:
        :math:`n`

    Dimension:
        :code:`1/volume`

.. py:data:: temperature

    :attr:`~symplyphysics.symbols.thermodynamics.temperature` of the semiconductor.

    Symbol:
        :code:`T`

    Latex:
        :math:`T`

    Dimension:
        :code:`temperature`

.. py:data:: charge_electron

    Magnitude of the electron :attr:`~symplyphysics.symbols.electrodynamics.charge`.

    Symbol:
        :code:`q`

    Latex:
        :math:`q`

    Dimension:
        :code:`charge`

.. py:data:: law

    :code:`Delta(V) = k_B * T * log(n_d * n_a / n^2) / q`


    Latex:
        .. math::
            \Delta V = \frac{T \log \frac{n_\text{d} n_\text{a}}{n^{2}} k_\text{B}}{q}


