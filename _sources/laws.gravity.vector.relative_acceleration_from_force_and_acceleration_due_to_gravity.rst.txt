Relative acceleration from force and acceleration due to gravity
================================================================

Suppose a reference frame :math:`S'` is fixed to a moving body :math:`A` (e.g. Earth). For some
body :math:`B` we can write a vector equation of motion relative to :math:`S'` in the gravitational
field of body :math:`A` with the rotation of body :math:`A` taken into consideration. From this, we
can gather the meaning of the acceleration due to gravity, also known as the free fall
acceleration: it is the acceleration of body :math:`B` relative to :math:`S'` in the absence of
external forces (:math:`\vec F = 0`) in the stationary case (the velocity of body :math:`B`
relative to :math:`S'` is zero, i.e. :math:`\vec v = 0` and :math:`{\vec a}_\text{Cor} = 0`).

..
    TODO: add link to source

.. py:currentmodule:: symplyphysics.laws.gravity.vector.relative_acceleration_from_force_and_acceleration_due_to_gravity

.. py:data:: relative_acceleration

    Vector of relative :attr:`~symplyphysics.symbols.classical_mechanics.acceleration` of body :math:`B` relative to :math:`S'`

Symbol:
    :code:`a_rel`

Latex:
    :math:`{\vec a}_\text{rel}`

Dimension:
    :code:`acceleration`


.. py:data:: force

    Vector of the net non-gravitational :attr:`~symplyphysics.symbols.classical_mechanics.force` exerted on body :math:`B`.

Symbol:
    :code:`F`

Latex:
    :math:`{\vec F}`

Dimension:
    :code:`force`


.. py:data:: mass

    :attr:`~symplyphysics.symbols.basic.mass` of body :math:`B`.

Symbol:
    :code:`m`

Latex:
    :math:`m`

Dimension:
    :code:`mass`


.. py:data:: coriolis_acceleration

    Vector of the Coriolis :attr:`~symplyphysics.symbols.classical_mechanics.acceleration` of body :math:`B`.

    ..
        TODO: add link to vector law

Symbol:
    :code:`a_Cor`

Latex:
    :math:`{\vec a}_\text{Cor}`

Dimension:
    :code:`acceleration`


.. py:data:: acceleration_due_to_gravity

    Vector of the acceleration due to gravity.

Symbol:
    :code:`g`

Latex:
    :math:`{\vec g}`

Dimension:
    :code:`acceleration`


.. py:data:: law

    :code:`a_rel = g - a_Cor + F / m`


    Latex:
        .. math::
            {\vec a}_\text{rel} = {\vec g} - {\vec a}_\text{Cor} + \frac{{\vec F}}{m}


