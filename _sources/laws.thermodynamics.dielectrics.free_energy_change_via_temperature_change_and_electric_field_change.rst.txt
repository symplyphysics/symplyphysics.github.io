Free energy change via temperature change and electric displacement change
--------------------------------------------------------------------------

The infinitesimal change in (Helmholtz) free energy of a system with a dielectric
medium can be expressed using the change in temperature and the change in electric
displacement.

**Conditions:**

#. The dielectric is isotropic whether or not the electric field is present.
#. The medium is homogeneous.
#. The volume change of the medium is insignificant.

**Links:**

#. Formula 31.7 on p. 122 of "General Course of Physics" (Obschiy kurs fiziki), vol. 3 by Sivukhin D.V. (1979).

.. py:currentmodule:: symplyphysics.laws.thermodynamics.dielectrics.free_energy_change_via_temperature_change_and_electric_field_change

.. py:data:: free_energy_density_change

    Infinitesimal change in :attr:`~symplyphysics.symbols.thermodynamics.helmholtz_free_energy` of the system
    per unit :attr:`~symplyphysics.symbols.classical_mechanics.volume`.

    Symbol:
        :code:`dH`

    Latex:
        :math:`dH`

    Dimension:
        :code:`energy/volume`

.. py:data:: entropy_density

    :attr:`~symplyphysics.symbols.thermodynamics.entropy` of the system per unit :attr:`~symplyphysics.symbols.classical_mechanics.volume`.

    Symbol:
        :code:`S`

    Latex:
        :math:`S`

    Dimension:
        :code:`energy/(temperature*volume)`

.. py:data:: temperature_change

    Infinitesimal change in :attr:`~symplyphysics.symbols.thermodynamics.temperature` of the system.

    Symbol:
        :code:`dT`

    Latex:
        :math:`dT`

    Dimension:
        :code:`temperature`

.. py:data:: electric_field_strength

    :attr:`~symplyphysics.symbols.electrodynamics.electric_field_strength`.

    Symbol:
        :code:`E`

    Latex:
        :math:`E`

    Dimension:
        :code:`voltage/length`

.. py:data:: electric_displacement_change

    Infinitesimal change in :attr:`~symplyphysics.symbols.electrodynamics.electric_displacement` of the system.

    Symbol:
        :code:`dD`

    Latex:
        :math:`dD`

    Dimension:
        :code:`charge/area`

.. py:data:: law

    :code:`dH = -S * dT + E * dD`


    Latex:
        .. math::
            dH = - S dT + E dD


