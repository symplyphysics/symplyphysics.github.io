Quality factor of loaded resonator from circuit parameters
----------------------------------------------------------

If the resonator is an oscillatory circuit to which an external circuit is connected,
then the loaded Q-factor of the resonator depends on the resistances of the resonator
and the external circuit, as well as on the inductance of the resonator and the
oscillation frequency.

..
    TODO: find link
    TODO: replace `2 * pi * f` with `omega`

.. py:currentmodule:: symplyphysics.laws.electricity.circuits.resonators.loaded_resonator_quality_factor_from_circuit_parameters

.. py:data:: loaded_quality_factor

    :attr:`~symplyphysics.symbols.classical_mechanics.quality_factor` of the loaded resonator.

    Symbol:
        :code:`Q_1`

    Latex:
        :math:`Q_{1}`

    Dimension:
        :code:`dimensionless`

.. py:data:: resistance

    :attr:`~symplyphysics.symbols.electrodynamics.electrical_resistance` of the oscillating circuit.

    Symbol:
        :code:`R_0`

    Latex:
        :math:`R_{0}`

    Dimension:
        :code:`impedance`

.. py:data:: inductance

    :attr:`~symplyphysics.symbols.electrodynamics.inductance` of the oscillating circuit.

    Symbol:
        :code:`L`

    Latex:
        :math:`L`

    Dimension:
        :code:`inductance`

.. py:data:: frequency

    :attr:`~symplyphysics.symbols.classical_mechanics.temporal_frequency` of the current.

    Symbol:
        :code:`f`

    Latex:
        :math:`f`

    Dimension:
        :code:`frequency`

.. py:data:: load_resistance

    :attr:`~symplyphysics.symbols.electrodynamics.electrical_resistance` of the load.

    Symbol:
        :code:`R_L`

    Latex:
        :math:`R_\text{L}`

    Dimension:
        :code:`impedance`

.. py:data:: law

    :code:`Q_1 = R_L * R_0 / (2 * pi * f * L * (R_L + R_0))`


    Latex:
        .. math::
            Q_{1} = \frac{R_\text{L} R_{0}}{2 \pi f L \left(R_\text{L} + R_{0}\right)}


