Transmission matrix of π-type matrix
------------------------------------

The π-type circuit consists of the first impedance connected in parallel, the third
impedance connected in series, and the second impedance connected in parallel. Knowing
the impedances, it is possible to calculate the parameters :math:`A, B, C, D` of the
transmission matrix of this line.

**Notes:**

#. See :ref:`Transmission matrix`.
#. Scheme of the circuit:

.. image:: https://en.wikipedia.org/wiki/%CE%A0_pad#/media/File:Attenuator,_Pi-section.svg
    :width: 400px
    :align: center

..
    TODO: find link

.. py:currentmodule:: symplyphysics.laws.electricity.circuits.transmission_lines.transmission_matrix_of_pi_type_circuit

.. py:data:: voltage_voltage_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.voltage` to output :attr:`~symplyphysics.symbols.electrodynamics.voltage` at idle at the output.

    Symbol:
        :code:`A`

    Latex:
        :math:`A`

    Dimension:
        :code:`dimensionless`

.. py:data:: voltage_current_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.voltage` to output :attr:`~symplyphysics.symbols.electrodynamics.current` in case of a short
    circuit at the output.

    Symbol:
        :code:`B`

    Latex:
        :math:`B`

    Dimension:
        :code:`impedance`

.. py:data:: current_voltage_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.current` to output :attr:`~symplyphysics.symbols.electrodynamics.voltage` at idle at the output.

    Symbol:
        :code:`C`

    Latex:
        :math:`C`

    Dimension:
        :code:`conductance`

.. py:data:: current_current_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.current` to output :attr:`~symplyphysics.symbols.electrodynamics.current` in case of a short
    circuit at the output.

    Symbol:
        :code:`D`

    Latex:
        :math:`D`

    Dimension:
        :code:`dimensionless`

.. py:data:: first_impedance

    First :attr:`~symplyphysics.symbols.electrodynamics.electrical_impedance`.

    Symbol:
        :code:`Z_1`

    Latex:
        :math:`Z_{1}`

    Dimension:
        :code:`impedance`

.. py:data:: second_impedance

    Second :attr:`~symplyphysics.symbols.electrodynamics.electrical_impedance`.

    Symbol:
        :code:`Z_2`

    Latex:
        :math:`Z_{2}`

    Dimension:
        :code:`impedance`

.. py:data:: third_impedance

    Third :attr:`~symplyphysics.symbols.electrodynamics.electrical_impedance`.

    Symbol:
        :code:`Z_3`

    Latex:
        :math:`Z_{3}`

    Dimension:
        :code:`impedance`

.. py:data:: law

    :code:`[[A, B], [C, D]] = [[1 + Z_3 / Z_2, Z_3], [1 / Z_1 + 1 / Z_2 + Z_3 / (Z_1 * Z_2), 1 + Z_3 / Z_1]]`


    Latex:
        .. math::
            \begin{pmatrix} A & B \\ C & D \end{pmatrix} = \begin{pmatrix} 1 + \frac{Z_{3}}{Z_{2}} & Z_{3} \\ \frac{1}{Z_{1}} + \frac{1}{Z_{2}} + \frac{Z_{3}}{Z_{1} Z_{2}} & 1 + \frac{Z_{3}}{Z_{1}} \end{pmatrix}


