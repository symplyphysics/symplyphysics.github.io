Transmission matrix of lossy transmission line
----------------------------------------------

The transmission parameters matrix is one of the ways to describe a microwave device.
The :math:`ABCD`-parameters of the device act as elements of this matrix. The matrix
equation relates the input voltage and input current to the output voltage and output
current. Knowing the length and the loss factor of the transmission line, as well as the
characteristic resistance of the line and the constant propagation of signal, it is
possible to calculate the parameters :math:`A, B, C, D` of the transmission matrix of
this line.

**Notes:**

#. See :ref:`Transmission matrix`.

..
    TODO: find link

.. py:currentmodule:: symplyphysics.laws.electricity.circuits.transmission_lines.transmission_matrix_lossy_transmission_line

.. py:data:: voltage_voltage_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.voltage` to output :attr:`~symplyphysics.symbols.electrodynamics.voltage` at idle at the output.

    Symbol:
        :code:`A`

    Latex:
        :math:`A`

    Dimension:
        :code:`dimensionless`

.. py:data:: voltage_current_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.voltage` to output :attr:`~symplyphysics.symbols.electrodynamics.current` in case of a short
    circuit at the output.

    Symbol:
        :code:`B`

    Latex:
        :math:`B`

    Dimension:
        :code:`impedance`

.. py:data:: current_voltage_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.current` to output :attr:`~symplyphysics.symbols.electrodynamics.voltage` at idle at the output.

    Symbol:
        :code:`C`

    Latex:
        :math:`C`

    Dimension:
        :code:`conductance`

.. py:data:: current_current_parameter

    Ratio of input :attr:`~symplyphysics.symbols.electrodynamics.current` to output :attr:`~symplyphysics.symbols.electrodynamics.current` in case of a short
    circuit at the output.

    Symbol:
        :code:`D`

    Latex:
        :math:`D`

    Dimension:
        :code:`dimensionless`

.. py:data:: surge_impedance

    :attr:`~symplyphysics.symbols.electrodynamics.surge_impedance` of the transmission line.

    Symbol:
        :code:`Z_S`

    Latex:
        :math:`Z_\text{S}`

    Dimension:
        :code:`impedance`

.. py:data:: length

    :attr:`~symplyphysics.symbols.classical_mechanics.length` of the transmission line.

    Symbol:
        :code:`l`

    Latex:
        :math:`l`

    Dimension:
        :code:`length`

.. py:data:: propagation_constant

    The **propagation constant** is the inverse of the signal :attr:`~symplyphysics.symbols.classical_mechanics.wavelength`.

    Symbol:
        :code:`b`

    Latex:
        :math:`b`

    Dimension:
        :code:`1/length`

.. py:data:: loss_factor

    The **loss factor** shows how many times the transmitted signal weakens per unit
    :attr:`~symplyphysics.symbols.classical_mechanics.length` of the transmission line.

    Symbol:
        :code:`a`

    Latex:
        :math:`a`

    Dimension:
        :code:`1/length`

.. py:data:: law

    :code:`[[A, B], [C, D]] = [[cosh((I * b + a) * l), Z_S * sinh((I * b + a) * l)], [sinh((I * b + a) * l) / Z_S, cosh((I * b + a) * l)]]`


    Latex:
        .. math::
            \begin{pmatrix} A & B \\ C & D \end{pmatrix} = \begin{pmatrix} \cosh{\left(\left(i b + a\right) l \right)} & Z_\text{S} \sinh{\left(\left(i b + a\right) l \right)} \\ \frac{\sinh{\left(\left(i b + a\right) l \right)}}{Z_\text{S}} & \cosh{\left(\left(i b + a\right) l \right)} \end{pmatrix}


