Impedances of T-type circuit of transmission line
-------------------------------------------------

The T-type circuit consists of the first impedance connected in series, the third
impedance connected in parallel, and the second impedance connected in series. For a
transmission line, these impedances can be calculated for an equivalent replacement
circuit by knowing the transmission line parameters.

..
    TODO: find link

.. py:currentmodule:: symplyphysics.laws.electricity.circuits.transmission_lines.impedances_t_type_circuit_of_transmission_line

.. py:data:: first_impedance

    First :attr:`~symplyphysics.symbols.electrodynamics.electrical_impedance`.

    Symbol:
        :code:`Z_1`

    Latex:
        :math:`Z_{1}`

    Dimension:
        :code:`impedance`

.. py:data:: second_impedance

    Second :attr:`~symplyphysics.symbols.electrodynamics.electrical_impedance`.

    Symbol:
        :code:`Z_2`

    Latex:
        :math:`Z_{2}`

    Dimension:
        :code:`impedance`

.. py:data:: third_impedance

    Third :attr:`~symplyphysics.symbols.electrodynamics.electrical_impedance`.

    Symbol:
        :code:`Z_3`

    Latex:
        :math:`Z_{3}`

    Dimension:
        :code:`impedance`

.. py:data:: surge_impedance

    :attr:`~symplyphysics.symbols.electrodynamics.surge_impedance` of the transmission line.

    Symbol:
        :code:`Z_S`

    Latex:
        :math:`Z_\text{S}`

    Dimension:
        :code:`impedance`

.. py:data:: length

    :attr:`~symplyphysics.symbols.classical_mechanics.length` of the transmission line.

    Symbol:
        :code:`l`

    Latex:
        :math:`l`

    Dimension:
        :code:`length`

.. py:data:: propagation_constant

    The **propagation constant** is the inverse of the signal :attr:`~symplyphysics.symbols.classical_mechanics.wavelength`.

    Symbol:
        :code:`b`

    Latex:
        :math:`b`

    Dimension:
        :code:`1/length`

.. py:data:: loss_factor

    The **loss factor** shows how many times the transmitted signal weakens per unit
    :attr:`~symplyphysics.symbols.classical_mechanics.length` of the transmission line.

    Symbol:
        :code:`a`

    Latex:
        :math:`a`

    Dimension:
        :code:`1/length`

.. py:data:: law

    :code:`[Z_1, Z_2, Z_3] = [Z_S * tanh((I * b + a) * l / 2), Z_S * tanh((I * b + a) * l / 2), Z_S / sinh((I * b + a) * l)]`


    Latex:
        .. math::
            \begin{pmatrix} Z_{1} \\ Z_{2} \\ Z_{3} \end{pmatrix} = \begin{pmatrix} Z_\text{S} \tanh{\left(\frac{\left(i b + a\right) l}{2} \right)} \\ Z_\text{S} \tanh{\left(\frac{\left(i b + a\right) l}{2} \right)} \\ \frac{Z_\text{S}}{\sinh{\left(\left(i b + a\right) l \right)}} \end{pmatrix}


